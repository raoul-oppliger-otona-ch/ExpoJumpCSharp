"use strict";

let FORMAT_INFO_BIT_POSITIONS_1 = [
  [0, 8], [1, 8], [2, 8], [3, 8], [4, 8], [5, 8], [7, 8], [8, 8],
  [8, 7], [8, 5], [8, 4], [8, 3], [8, 2], [8, 1], [8, 0],
];
  
let FORMAT_INFO_BIT_POSITIONS_2 = [
  [8, -1], [8, -2], [8, -3], [8, -4], [8, -5], [8, -6], [8, -7],
  [-1, 8], [-2, 8], [-3, 8], [-4, 8], [-5, 8], [-6, 8],
];

let EC_LEVELS = "mlhq";
    
let ALIGNMENT_PATTERN_LOCATIONS = [
  null,
  [],
  [6, 18],
  [6, 22],
  [6, 26],
  [6, 30],
  [6, 34],
  [6, 22, 38],
  [6, 24, 42],
  [6, 26, 46],
  [6, 28, 50],
  [6, 30, 54],
  [6, 32, 58],
  [6, 34, 62],
  [6, 26, 46, 66],
  [6, 26, 48, 70],
  [6, 26, 50, 74],
  [6, 30, 54, 78],
  [6, 30, 56, 82],
  [6, 30, 58, 86],
  [6, 34, 62, 90],
  [6, 28, 50, 72, 94],
  [6, 26, 50, 74, 98],
  [6, 30, 54, 78, 102],
  [6, 28, 54, 80, 106],
  [6, 32, 58, 84, 110],
  [6, 30, 58, 86, 114],
  [6, 34, 62, 90, 118],
  [6, 26, 50, 74, 98, 122],
  [6, 30, 54, 78, 102, 126],
  [6, 26, 52, 78, 104, 130],
  [6, 30, 56, 82, 108, 134],
  [6, 34, 60, 86, 112, 138],
  [6, 30, 58, 86, 114, 142],
  [6, 34, 62, 90, 118, 146],
  [6, 30, 54, 78, 102, 126, 150],
  [6, 24, 50, 76, 102, 128, 154],
  [6, 28, 54, 80, 106, 132, 158],
  [6, 32, 58, 84, 110, 136, 162],
  [6, 26, 54, 82, 110, 138, 166],
  [6, 30, 58, 86, 114, 142, 170],
];

// EC code + version -> {sum: data codewords, blocks: list([blocks, data codewords, EC codewords])}
// Cribbed from thonky.com . It's hopefully correct. It was much easier to process automatically
// than the specification, and after manually transcribing 25% of this table, it finally dawned on
// me that since they say I'm a computer person, I should be able to automate that particularly
// tedious job. A few 'sed' invocations later, done.
let CODE_BLOCKS = {
  l1: {sum: 19, blocks: [[7, 1, 19]]},
  m1: {sum: 16, blocks: [[10, 1, 16]]},
  q1: {sum: 13, blocks: [[13, 1, 13]]},
  h1: {sum: 9, blocks: [[17, 1, 9]]},
  l2: {sum: 34, blocks: [[10, 1, 34]]},
  m2: {sum: 28, blocks: [[16, 1, 28]]},
  q2: {sum: 22, blocks: [[22, 1, 22]]},
  h2: {sum: 16, blocks: [[28, 1, 16]]},
  l3: {sum: 55, blocks: [[15, 1, 55]]},
  m3: {sum: 44, blocks: [[26, 1, 44]]},
  q3: {sum: 34, blocks: [[18, 2, 17]]},
  h3: {sum: 26, blocks: [[22, 2, 13]]},
  l4: {sum: 80, blocks: [[20, 1, 80]]},
  m4: {sum: 64, blocks: [[18, 2, 32]]},
  q4: {sum: 48, blocks: [[26, 2, 24]]},
  h4: {sum: 36, blocks: [[16, 4, 9]]},
  l5: {sum: 108, blocks: [[26, 1, 108]]},
  m5: {sum: 86, blocks: [[24, 2, 43]]},
  q5: {sum: 62, blocks: [[18, 2, 15], [18, 2, 16]]},
  h5: {sum: 46, blocks: [[22, 2, 11], [22, 2, 12]]},
  l6: {sum: 136, blocks: [[18, 2, 68]]},
  m6: {sum: 108, blocks: [[16, 4, 27]]},
  q6: {sum: 76, blocks: [[24, 4, 19]]},
  h6: {sum: 60, blocks: [[28, 4, 15]]},
  l7: {sum: 156, blocks: [[20, 2, 78]]},
  m7: {sum: 124, blocks: [[18, 4, 31]]},
  q7: {sum: 88, blocks: [[18, 2, 14], [18, 4, 15]]},
  h7: {sum: 66, blocks: [[26, 4, 13], [26, 1, 14]]},
  l8: {sum: 194, blocks: [[24, 2, 97]]},
  m8: {sum: 154, blocks: [[22, 2, 38], [22, 2, 39]]},
  q8: {sum: 110, blocks: [[22, 4, 18], [22, 2, 19]]},
  h8: {sum: 86, blocks: [[26, 4, 14], [26, 2, 15]]},
  l9: {sum: 232, blocks: [[30, 2, 116]]},
  m9: {sum: 182, blocks: [[22, 3, 36], [22, 2, 37]]},
  q9: {sum: 132, blocks: [[20, 4, 16], [20, 4, 17]]},
  h9: {sum: 100, blocks: [[24, 4, 12], [24, 4, 13]]},
  l10: {sum: 274, blocks: [[18, 2, 68], [18, 2, 69]]},
  m10: {sum: 216, blocks: [[26, 4, 43], [26, 1, 44]]},
  q10: {sum: 154, blocks: [[24, 6, 19], [24, 2, 20]]},
  h10: {sum: 122, blocks: [[28, 6, 15], [28, 2, 16]]},
  l11: {sum: 324, blocks: [[20, 4, 81]]},
  m11: {sum: 254, blocks: [[30, 1, 50], [30, 4, 51]]},
  q11: {sum: 180, blocks: [[28, 4, 22], [28, 4, 23]]},
  h11: {sum: 140, blocks: [[24, 3, 12], [24, 8, 13]]},
  l12: {sum: 370, blocks: [[24, 2, 92], [24, 2, 93]]},
  m12: {sum: 290, blocks: [[22, 6, 36], [22, 2, 37]]},
  q12: {sum: 206, blocks: [[26, 4, 20], [26, 6, 21]]},
  h12: {sum: 158, blocks: [[28, 7, 14], [28, 4, 15]]},
  l13: {sum: 428, blocks: [[26, 4, 107]]},
  m13: {sum: 334, blocks: [[22, 8, 37], [22, 1, 38]]},
  q13: {sum: 244, blocks: [[24, 8, 20], [24, 4, 21]]},
  h13: {sum: 180, blocks: [[22, 12, 11], [22, 4, 12]]},
  l14: {sum: 461, blocks: [[30, 3, 115], [30, 1, 116]]},
  m14: {sum: 365, blocks: [[24, 4, 40], [24, 5, 41]]},
  q14: {sum: 261, blocks: [[20, 11, 16], [20, 5, 17]]},
  h14: {sum: 197, blocks: [[24, 11, 12], [24, 5, 13]]},
  l15: {sum: 523, blocks: [[22, 5, 87], [22, 1, 88]]},
  m15: {sum: 415, blocks: [[24, 5, 41], [24, 5, 42]]},
  q15: {sum: 295, blocks: [[30, 5, 24], [30, 7, 25]]},
  h15: {sum: 223, blocks: [[24, 11, 12], [24, 7, 13]]},
  l16: {sum: 589, blocks: [[24, 5, 98], [24, 1, 99]]},
  m16: {sum: 453, blocks: [[28, 7, 45], [28, 3, 46]]},
  q16: {sum: 325, blocks: [[24, 15, 19], [24, 2, 20]]},
  h16: {sum: 253, blocks: [[30, 3, 15], [30, 13, 16]]},
  l17: {sum: 647, blocks: [[28, 1, 107], [28, 5, 108]]},
  m17: {sum: 507, blocks: [[28, 10, 46], [28, 1, 47]]},
  q17: {sum: 367, blocks: [[28, 1, 22], [28, 15, 23]]},
  h17: {sum: 283, blocks: [[28, 2, 14], [28, 17, 15]]},
  l18: {sum: 721, blocks: [[30, 5, 120], [30, 1, 121]]},
  m18: {sum: 563, blocks: [[26, 9, 43], [26, 4, 44]]},
  q18: {sum: 397, blocks: [[28, 17, 22], [28, 1, 23]]},
  h18: {sum: 313, blocks: [[28, 2, 14], [28, 19, 15]]},
  l19: {sum: 795, blocks: [[28, 3, 113], [28, 4, 114]]},
  m19: {sum: 627, blocks: [[26, 3, 44], [26, 11, 45]]},
  q19: {sum: 445, blocks: [[26, 17, 21], [26, 4, 22]]},
  h19: {sum: 341, blocks: [[26, 9, 13], [26, 16, 14]]},
  l20: {sum: 861, blocks: [[28, 3, 107], [28, 5, 108]]},
  m20: {sum: 669, blocks: [[26, 3, 41], [26, 13, 42]]},
  q20: {sum: 485, blocks: [[30, 15, 24], [30, 5, 25]]},
  h20: {sum: 385, blocks: [[28, 15, 15], [28, 10, 16]]},
  l21: {sum: 932, blocks: [[28, 4, 116], [28, 4, 117]]},
  m21: {sum: 714, blocks: [[26, 17, 42]]},
  q21: {sum: 512, blocks: [[28, 17, 22], [28, 6, 23]]},
  h21: {sum: 406, blocks: [[30, 19, 16], [30, 6, 17]]},
  l22: {sum: 1006, blocks: [[28, 2, 111], [28, 7, 112]]},
  m22: {sum: 782, blocks: [[28, 17, 46]]},
  q22: {sum: 568, blocks: [[30, 7, 24], [30, 16, 25]]},
  h22: {sum: 442, blocks: [[24, 34, 13]]},
  l23: {sum: 1094, blocks: [[30, 4, 121], [30, 5, 122]]},
  m23: {sum: 860, blocks: [[28, 4, 47], [28, 14, 48]]},
  q23: {sum: 614, blocks: [[30, 11, 24], [30, 14, 25]]},
  h23: {sum: 464, blocks: [[30, 16, 15], [30, 14, 16]]},
  l24: {sum: 1174, blocks: [[30, 6, 117], [30, 4, 118]]},
  m24: {sum: 914, blocks: [[28, 6, 45], [28, 14, 46]]},
  q24: {sum: 664, blocks: [[30, 11, 24], [30, 16, 25]]},
  h24: {sum: 514, blocks: [[30, 30, 16], [30, 2, 17]]},
  l25: {sum: 1276, blocks: [[26, 8, 106], [26, 4, 107]]},
  m25: {sum: 1000, blocks: [[28, 8, 47], [28, 13, 48]]},
  q25: {sum: 718, blocks: [[30, 7, 24], [30, 22, 25]]},
  h25: {sum: 538, blocks: [[30, 22, 15], [30, 13, 16]]},
  l26: {sum: 1370, blocks: [[28, 10, 114], [28, 2, 115]]},
  m26: {sum: 1062, blocks: [[28, 19, 46], [28, 4, 47]]},
  q26: {sum: 754, blocks: [[28, 28, 22], [28, 6, 23]]},
  h26: {sum: 596, blocks: [[30, 33, 16], [30, 4, 17]]},
  l27: {sum: 1468, blocks: [[30, 8, 122], [30, 4, 123]]},
  m27: {sum: 1128, blocks: [[28, 22, 45], [28, 3, 46]]},
  q27: {sum: 808, blocks: [[30, 8, 23], [30, 26, 24]]},
  h27: {sum: 628, blocks: [[30, 12, 15], [30, 28, 16]]},
  l28: {sum: 1531, blocks: [[30, 3, 117], [30, 10, 118]]},
  m28: {sum: 1193, blocks: [[28, 3, 45], [28, 23, 46]]},
  q28: {sum: 871, blocks: [[30, 4, 24], [30, 31, 25]]},
  h28: {sum: 661, blocks: [[30, 11, 15], [30, 31, 16]]},
  l29: {sum: 1631, blocks: [[30, 7, 116], [30, 7, 117]]},
  m29: {sum: 1267, blocks: [[28, 21, 45], [28, 7, 46]]},
  q29: {sum: 911, blocks: [[30, 1, 23], [30, 37, 24]]},
  h29: {sum: 701, blocks: [[30, 19, 15], [30, 26, 16]]},
  l30: {sum: 1735, blocks: [[30, 5, 115], [30, 10, 116]]},
  m30: {sum: 1373, blocks: [[28, 19, 47], [28, 10, 48]]},
  q30: {sum: 985, blocks: [[30, 15, 24], [30, 25, 25]]},
  h30: {sum: 745, blocks: [[30, 23, 15], [30, 25, 16]]},
  l31: {sum: 1843, blocks: [[30, 13, 115], [30, 3, 116]]},
  m31: {sum: 1455, blocks: [[28, 2, 46], [28, 29, 47]]},
  q31: {sum: 1033, blocks: [[30, 42, 24], [30, 1, 25]]},
  h31: {sum: 793, blocks: [[30, 23, 15], [30, 28, 16]]},
  l32: {sum: 1955, blocks: [[30, 17, 115]]},
  m32: {sum: 1541, blocks: [[28, 10, 46], [28, 23, 47]]},
  q32: {sum: 1115, blocks: [[30, 10, 24], [30, 35, 25]]},
  h32: {sum: 845, blocks: [[30, 19, 15], [30, 35, 16]]},
  l33: {sum: 2071, blocks: [[30, 17, 115], [30, 1, 116]]},
  m33: {sum: 1631, blocks: [[28, 14, 46], [28, 21, 47]]},
  q33: {sum: 1171, blocks: [[30, 29, 24], [30, 19, 25]]},
  h33: {sum: 901, blocks: [[30, 11, 15], [30, 46, 16]]},
  l34: {sum: 2191, blocks: [[30, 13, 115], [30, 6, 116]]},
  m34: {sum: 1725, blocks: [[28, 14, 46], [28, 23, 47]]},
  q34: {sum: 1231, blocks: [[30, 44, 24], [30, 7, 25]]},
  h34: {sum: 961, blocks: [[30, 59, 16], [30, 1, 17]]},
  l35: {sum: 2306, blocks: [[30, 12, 121], [30, 7, 122]]},
  m35: {sum: 1812, blocks: [[28, 12, 47], [28, 26, 48]]},
  q35: {sum: 1286, blocks: [[30, 39, 24], [30, 14, 25]]},
  h35: {sum: 986, blocks: [[30, 22, 15], [30, 41, 16]]},
  l36: {sum: 2434, blocks: [[30, 6, 121], [30, 14, 122]]},
  m36: {sum: 1914, blocks: [[28, 6, 47], [28, 34, 48]]},
  q36: {sum: 1354, blocks: [[30, 46, 24], [30, 10, 25]]},
  h36: {sum: 1054, blocks: [[30, 2, 15], [30, 64, 16]]},
  l37: {sum: 2566, blocks: [[30, 17, 122], [30, 4, 123]]},
  m37: {sum: 1992, blocks: [[28, 29, 46], [28, 14, 47]]},
  q37: {sum: 1426, blocks: [[30, 49, 24], [30, 10, 25]]},
  h37: {sum: 1096, blocks: [[30, 24, 15], [30, 46, 16]]},
  l38: {sum: 2702, blocks: [[30, 4, 122], [30, 18, 123]]},
  m38: {sum: 2102, blocks: [[28, 13, 46], [28, 32, 47]]},
  q38: {sum: 1502, blocks: [[30, 48, 24], [30, 14, 25]]},
  h38: {sum: 1142, blocks: [[30, 42, 15], [30, 32, 16]]},
  l39: {sum: 2812, blocks: [[30, 20, 117], [30, 4, 118]]},
  m39: {sum: 2216, blocks: [[28, 40, 47], [28, 7, 48]]},
  q39: {sum: 1582, blocks: [[30, 43, 24], [30, 22, 25]]},
  h39: {sum: 1222, blocks: [[30, 10, 15], [30, 67, 16]]},
  l40: {sum: 2956, blocks: [[30, 19, 118], [30, 6, 119]]},
  m40: {sum: 2334, blocks: [[28, 18, 47], [28, 31, 48]]},
  q40: {sum: 1666, blocks: [[30, 34, 24], [30, 34, 25]]},
  h40: {sum: 1276, blocks: [[30, 20, 15], [30, 61, 16]]},
};

// Module should be inverted if this returns true

let DATA_MASKS = [
  (x, y) => (x + y) % 2 === 0,
  (x, y) => y % 2 === 0,
  (x, y) => x % 3 === 0,
  (x, y) => (x + y) % 3 === 0,
  (x, y) => (Math.floor(y / 2) + Math.floor(x / 3)) % 2 === 0,
  (x, y) => (x * y) % 2 + (x * y) % 3 === 0,
  (x, y) => ((x * y) % 2 + (x * y) % 3) % 2 === 0,
  (x, y) => ((x + y) % 2 + (x * y) % 3) % 2 === 0
];
  
let ALPHANUMERIC_TABLE = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:";